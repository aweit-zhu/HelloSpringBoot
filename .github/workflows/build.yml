name: Build and Test Spring Boot App

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: self-hosted

    steps:
      # 1️⃣ 檢出你的程式碼
      - name: Checkout source code
        uses: actions/checkout@v4

      # 2️⃣ 設定 Java 環境（例如 JDK 17）
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'   # 可用 'zulu'、'corretto' 等

      # 3️⃣ 使用 Maven 編譯與測試
      - name: Build with Maven
        run: mvn -B clean verify

      # 4️⃣ 可選：打包 Spring Boot jar
      - name: Package Spring Boot Jar
        run: mvn -B clean package -DskipTests

      # 5️⃣ 可選：上傳編譯後的 jar 檔作為 artifact
      #- name: Upload build artifact
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: spring-boot-jar
      #    path: target/*.jar
      ##- name: Ensure Deployment Directory
      #  run: mkdir -p /home/awei/HelloSpringBoot

      # 4️⃣ 複製 jar 到服務目錄
      - name: Deploy Jar
        run: cp target/*.jar /home/awei/HelloSpringBoot/

      # 5️⃣ 重新啟動 systemd 服務
      - name: Restart Spring Boot Service
        run: sudo systemctl restart hellospringboot
        #sudo systemctl daemon-reload
        #sudo systemctl enable hellospringboot    # 開機自動啟動
        #sudo systemctl disable hellospringboot    # 關閉開機自動啟動
        #sudo systemctl start hellospringboot     # 啟動服務
        #sudo systemctl stop hellospringboot     # 啟動服務
        #sudo systemctl status hellospringboot    # 查看狀態
        #sudo journalctl -u hellospringboot -f #查看console

      # 6️⃣ 檢查服務狀態（可選）
      - name: Check Service Status
        run: sudo systemctl status hellospringboot --no-pager